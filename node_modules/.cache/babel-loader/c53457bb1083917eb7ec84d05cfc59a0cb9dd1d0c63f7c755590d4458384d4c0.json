{"ast":null,"code":"var _jsxFileName = \"A:\\\\NEO-VERSE\\\\FrontEnd-Copy\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userType, setUserType] = useState(null); // 'admin', 'student', 'faculty'\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for stored authentication data on app load\n    const storedUser = localStorage.getItem('currentUser');\n    const storedUserType = localStorage.getItem('userType');\n    if (storedUser && storedUserType) {\n      setCurrentUser(JSON.parse(storedUser));\n      setUserType(storedUserType);\n    }\n    setLoading(false);\n  }, []);\n  const login = (user, type) => {\n    setCurrentUser(user);\n    setUserType(type);\n    localStorage.setItem('currentUser', JSON.stringify(user));\n    localStorage.setItem('userType', type);\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    setUserType(null);\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('userType');\n  };\n  const value = {\n    currentUser,\n    userType,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"UqATS9vKTGnGY288JAaGQoEcoLw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","userType","setUserType","loading","setLoading","storedUser","localStorage","getItem","storedUserType","JSON","parse","login","user","type","setItem","stringify","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["A:/NEO-VERSE/FrontEnd-Copy/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [userType, setUserType] = useState(null); // 'admin', 'student', 'faculty'\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check for stored authentication data on app load\r\n    const storedUser = localStorage.getItem('currentUser');\r\n    const storedUserType = localStorage.getItem('userType');\r\n    \r\n    if (storedUser && storedUserType) {\r\n      setCurrentUser(JSON.parse(storedUser));\r\n      setUserType(storedUserType);\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (user, type) => {\r\n    setCurrentUser(user);\r\n    setUserType(type);\r\n    localStorage.setItem('currentUser', JSON.stringify(user));\r\n    localStorage.setItem('userType', type);\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    setUserType(null);\r\n    localStorage.removeItem('currentUser');\r\n    localStorage.removeItem('userType');\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    userType,\r\n    login,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACtD,MAAMC,cAAc,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEvD,IAAIF,UAAU,IAAIG,cAAc,EAAE;MAChCR,cAAc,CAACS,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC;MACtCH,WAAW,CAACM,cAAc,CAAC;IAC7B;IAEAJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;IAC5Bb,cAAc,CAACY,IAAI,CAAC;IACpBV,WAAW,CAACW,IAAI,CAAC;IACjBP,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,SAAS,CAACH,IAAI,CAAC,CAAC;IACzDN,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAED,IAAI,CAAC;EACxC,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBhB,cAAc,CAAC,IAAI,CAAC;IACpBE,WAAW,CAAC,IAAI,CAAC;IACjBI,YAAY,CAACW,UAAU,CAAC,aAAa,CAAC;IACtCX,YAAY,CAACW,UAAU,CAAC,UAAU,CAAC;EACrC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZnB,WAAW;IACXE,QAAQ;IACRU,KAAK;IACLK,MAAM;IACNb;EACF,CAAC;EAED,oBACEb,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArB,QAAA,EAChCA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,GAAA,CA7CWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}